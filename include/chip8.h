#ifndef CHIP8_T_H
#define CHIP8_T_H

#include <stdint.h>

//Conjunto de fuentes del chip-8.
uint8_t fontset[80] = 
{
  0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
  0x20, 0x60, 0x20, 0x20, 0x70, // 1
  0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
  0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
  0x90, 0x90, 0xF0, 0x10, 0x10, // 4
  0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
  0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
  0xF0, 0x10, 0x20, 0x40, 0x40, // 7
  0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
  0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
  0xF0, 0x90, 0xF0, 0x90, 0x90, // A
  0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
  0xF0, 0x80, 0x80, 0x80, 0xF0, // C
  0xE0, 0x90, 0x90, 0x90, 0xE0, // D
  0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
  0xF0, 0x80, 0xF0, 0x80, 0x80  // F
};

struct chip8
{
    //Memoria ram	
    uint8_t RAM[4096];
    
    //Registros
    uint8_t V[16];
    uint16_t PC;
    uint8_t SP;
    uint16_t I;
    uint16_t Pila[16];
    
    //temporizadores
    uint8_t temp_delay;
    uint8_t temp_sonido;
    
    //teclas - controles
    uint8_t teclas[16];

    //pantalla
    unsigned int pantalla[64 * 32];
    
    //opcodes - instrucciones
    uint16_t opcode;
};

//funciones de inicializar, reiniciar, cicloFDE, lectura de roms, timers, graficos...
void ini_cmptes(struct chip8 *c8);
void cicloFDE(struct chip8 *c8);
//funciones de reinicio, entrada del teclado, lectura de roms, timers..
int leerROM(struct chip8 *c8 ,char *romfile);
//
//
//
#endif
